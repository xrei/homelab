# roles/prereqs/tasks/main.yml

- name: Adjust kernel parameters
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
    - {name: "fs.inotify.max_queued_events", value: 16384}
    - {name: "fs.inotify.max_user_instances", value: 8192}
    - {name: "fs.inotify.max_user_watches", value: 524288}
    - {name: "net.ipv4.ip_forward", value: 1}

- name: Ensure dummy kernel module is loaded
  modprobe:
    name: dummy
    state: present
  become: true

- name: Create clusternet interface
  shell: |
    ip link add clusternet type dummy || true
    ip addr add {{ node_virtual_cidr }} dev clusternet || true
    ip link set clusternet up
  ignore_errors: true
  become: true

- name: Make clusternet persistent
  copy:
    dest: /etc/systemd/network/clusternet.netdev
    content: |
      [NetDev]
      Name=clusternet
      Kind=dummy
  become: true

- name: Persist clusternet IP config
  copy:
    dest: /etc/systemd/network/clusternet.network
    content: |
      [Match]
      Name=clusternet

      [Network]
      Address={{ node_virtual_cidr }}
  become: true

- name: Restart networking
  shell: systemctl restart systemd-networkd || true
  ignore_errors: true

- name: Install nftables
  apt:
    name: nftables
    state: present
    update_cache: yes
  become: true

- name: Get external interface name
  shell: ip route get 1.1.1.1 | awk '{print $5; exit}'
  register: ext_if_result
  changed_when: false

- name: Set external interface fact
  set_fact:
    ext_if: "{{ ext_if_result.stdout }}"


- name: Create nftables NAT config
  copy:
    dest: /etc/nftables.conf
    content: |
      table ip clusternet_nat {
        chain prerouting {
          type nat hook prerouting priority 0; policy accept;
          # Forward API traffic from main server IP to node virtual IP
          iifname {{ ext_if }} ip daddr {{ control_plane }} tcp dport 6443 dnat to {{ node_virtual_ip }}:6443
        }
        chain postrouting {
          type nat hook postrouting priority 100; policy accept;
          # Masquerade API responses
          ip saddr {{ node_virtual_cidr }} ip daddr {{ control_plane }} tcp dport 6443 masquerade
        }
      }
  become: true

- name: Remove clusternet_nat table if it exists
  ansible.builtin.command: nft delete table ip clusternet_nat
  ignore_errors: true
  become: true

- name: Apply nftables rules immediately
  ansible.builtin.command: nft -f /etc/nftables.conf
  become: true

- name: Enable and start nftables
  systemd:
    name: nftables
    enabled: yes
    state: started
  become: true

